#include<bits/stdc++.h>
using namespace std;
struct node
{
    int data;
    node* right;
     node* left;
};
node* newNode(int key)
{
    node* temp = new node;
    temp->data=key;
    temp->left=temp->right=NULL;
    return temp;
}
node* insert (node* root,int key)
{
    if(root==NULL)
    return newNode(key);
    if(root->data>key) root->left=insert(root->left,key);
    if(root->data<key) root->right=insert(root->right,key);
    return root;
}
bool deadEnd(node* root,int min=1,int max=INT_MAX)
{
 if(root==NULL)
 return false;
 if(min==max)
return true;
return deadEnd(root->left,min,root->data-1) || deadEnd(root->right,root->data+1,max);
}
int main()
{
    /*   8
       /   \
      5    11
     /  \
    2    7
     \
      3
       \
        4 */
    node* root = NULL;
    root = insert(root, 8);
    root = insert(root, 5);
    root = insert(root, 2);
    root = insert(root, 3);
    root = insert(root, 7);
    root = insert(root, 11);
    root = insert(root, 4);
    if (deadEnd(root) == true)
        cout << "Yes " << endl;
    else
        cout << "No " << endl;
    return 0;
}