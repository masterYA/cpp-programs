#include<bits/stdc++.h>
using namespace std;
struct Node
{
    int data;
    struct Node *next;
    struct Node *child;
};
Node* newNode(int key)
{
    Node* temp= new Node;
    temp->data=key;
    temp->child=NULL;
    temp->next=NULL;
    return temp;
}
    Node *root = newNode(10);

Node* addChild(Node* root, int key)
{   
    if(root->child==NULL) return(root ->child = newNode(key));
    Node* temp=root->child;
        while(temp->next!=NULL)
        temp=temp->next;
        temp->next=newNode(key);
   
    return temp->next;
}
void traverseTree(Node* root)
{   
    cout<<root->data<<" ";
    if(root -> child)traverseTree(root->child);
    if(root->next)traverseTree(root->next);
}
int main()
{
    Node *n1  = addChild(root, 2);
    Node *n2  = addChild(root, 3);
    Node *n3  = addChild(root, 4);
    Node *n4  = addChild(n3, 6);
    Node *n5  = addChild(root, 5);
    Node *n6  = addChild(n5, 7);
    Node *n7  = addChild(n5, 8);
    Node *n8  = addChild(n5, 9);
    traverseTree(root);
    return 0;
}
    
