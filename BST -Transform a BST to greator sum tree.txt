#include<bits/stdc++.h>
#include<iostream>
using namespace std;
struct node
{
  int data;
  node* left;
  node* right;
};
node* newNode(int key){
    node* temp=new node;
    temp->data=key;
    temp->left=temp->right=NULL;;
    return temp;
}

void print(node* root)
{
    if(root==NULL)
    return;
    
    if(root->left) print(root->left);
    cout<<root->data<<" ";
    if(root->right) print(root->right);
}int s=0;
int sum(node* root)
{      
    s=s+root->data;
    return s;
}
node* transform(node* root)
{
    if(root==NULL)
    return NULL;
    transform(root->right);
    root->data=sum(root)-root->data;
    transform(root->left);
    return root;
}
int main()
{
    struct node *root = newNode(11);
    root->left = newNode(2);
    root->right = newNode(29);
    root->left->left = newNode(1);
    root->left->right = newNode(7);
    root->right->left = newNode(15);
    root->right->right = newNode(40);
    root->right->right->left = newNode(35);
 
    cout << "Inorder Traversal of given tree\n";
    print(root);
 
    root=transform(root);
 
    cout << "\n\nInorder Traversal of transformed tree\n";
    print(root);
 
    return 0;
}