
#include <bits/stdc++.h>
using namespace std;

struct node {
	int data;
	struct node *left, *right;
};

node* newnode(int data)
{
	node* temp = new node;
	temp->data = data;
	temp->left = NULL;
	temp->right = NULL;
	return temp;
}
void insert(node*& root, int key)
{
    if(root==NULL) root=newnode(key);
    else if(key>root->data) insert(root->right,key);
    else if (key<root->data) insert(root->left,key);
    return;
}
void modifyBST(node*& root)
{   static int sum=0;
    if(root==NULL) return;
    modifyBST(root->right);
    sum=sum+root->data;
    root->data=sum;
    modifyBST(root->left);
}
void inorder(node* root)
{   if(root==NULL) return ;
    inorder (root->left);
    cout<<root->data<<" ";
    inorder(root->right);
}
int main()
{
    /* Let us create following BST
              50
           /     \
          30      70
         /  \    /  \
       20   40  60   80 */
    struct node *root = NULL;
    insert(root, 50);
    insert(root, 30);
    insert(root, 20);
    insert(root, 40);
    insert(root, 70);
    insert(root, 60);
    insert(root, 80);
 
    modifyBST(root);
 
    // print inoder tarversal of the modified BST
    inorder(root);
 
    return 0;
}