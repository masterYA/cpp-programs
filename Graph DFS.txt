#include<bits/stdc++.h>
using namespace std;
vector<bool>v;
vector<vector<int>>g;
void edge(int a,int b)
{
    g[a].push_back(b);
    g[b].push_back(a);
}

void dfs(int u)
{
   // iterative 
    /*
    stack<int>s;
    s.push(u);
    cout<<u<<" ";
    v[u]=1;
    while(!s.empty())
    {
        int f=s.top();
        
        
        int flag=1;
        
        for(auto i=g[f].begin();i!=g[f].end();i++)
        {
            if(!v[*i]) 
            {
                        s.push(*i);
                        v[*i]=1;
                        flag=0; 
                        cout<<s.top()<<" ";
                        break;
                
                        }
        }
        
        if(flag) {s.pop();}
        
    }
    */
    
    //recursive
    
    v[u]=1;
    cout<<u<<" ";
    for(auto i=g[u].begin();i!=g[u].end();i++)
    {
        if(!v[*i]) dfs(*i);
    }
}
int main()
{
    int n, e;
	cin >> n >> e;

	v.assign(n, false);
	g.assign(n, vector<int>());
	
	int a, b;
	for (int i = 0; i < e; i++) {
		cin >> a >> b;
		edge(a, b);
	}

	for (int i = 0; i < n; i++) {
		if (!v[i])
			dfs(i);
	}

	return 0;

}