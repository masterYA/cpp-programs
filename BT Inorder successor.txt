#include<bits/stdc++.h>
using namespace std;
struct node
{
    int data;
    node* right;
     node* left;
};
node* newNode(int key)
{
    node* temp = new node;
    temp->data=key;
    temp->left=temp->right=NULL;
    return temp;
}

 node* insert(node* root, int data)
{
    if (root == NULL)
        return newNode(data);
    if (data < root->data)
        root->left = insert(root->left, data);
    else if (data > root->data)
        root->right = insert(root->right, data);
    return root;
}
 

void inorder(struct node* root)
{
    if (root != NULL) {
        inorder(root->left);
        cout << root->data << " ";
        inorder(root->right);
    }
}

void ksmallest(node* root, int key,int *count)
{
    if(root==NULL) return;
    ksmallest(root->left,key,count);
    if(*count==1)
    {cout<<root->data;++*count;}
    if(root->data==key) 
    ++*count;
    ksmallest(root->right,key,count);
}


 
int main()
{
 node* root=NULL;
   root = insert(root, 20);
  root = insert(root, 8);
  root = insert(root, 22);
  root = insert(root, 4);
  root = insert(root, 12);
  root = insert(root, 10);  
  root = insert(root, 14);    
    inorder(root);
    cout<<endl;
    int count=0;
    ksmallest(root, 14,&count);
    return 0;
}
